version: '3'
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: web
    ports:
      - "1337:1337"
    environment:
      - APP_KEYS=x0zHuSwc1r8XStB+cUHszg==,ogKwCCdG+4w5ujMivr9A2g==,7JXVXkxhpT+Qphv39zorQQ==,qlcL++QD2s9tlcEezrXXYA==
      - API_TOKEN_SALT=gf6Xylyb503SIYAtkcyZQw==
      - ADMIN_JWT_SECRET=YMdyVFYgzYanwOZGPJu8eg==
      - TRANSFER_TOKEN_SALT=MS8OW3UWjRjcZxv3P8e8ZQ==
      - JWT_SECRET=1jEultXGNCgCerP95aJarw==
      - DATABASE_HOST=database-1.c1fxj4fkthpu.eu-north-1.rds.amazonaws.com
      - DATABASE_NAME=sample_mpfz
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=admin12345678
      - DATABASE_PORT=5432
      - STORAGE_BUCKET_URL=portfolio-d7a1f.appspot.com
    networks:
      - net
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - net

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - net

networks:
  net:
    external: true